{"version":3,"sources":["API/BooksAPI.js","components/book/BookCover.js","components/shelf/BookshelfChanger.js","components/book/BookAuthors.js","components/book/BookTop.js","components/book/BookTitle.js","components/book/Book.js","components/shelf/BooksGrid.js","components/search/SearchBooksResults.js","components/search/SearchBooksInput.js","components/search/CloseSearch.js","components/search/SearchBooksBar.js","components/SearchBooks.js","components/Home/ListBooksTitle.js","components/shelf/BookshelfTitle.js","components/shelf/BookshelfBooks.js","components/shelf/Bookshelf.js","components/ListBooksContent.js","components/Home/OpenSearch.js","components/Home/ListBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","BookCover","props","backgroundImage","react_default","a","createElement","className","style","width","height","prototype","PropTypes","string","defaultProps","BookshelfChanger","onShelfChange","event","_this$props","_this","target","value","this","onChange","defaultValue","disabled","Component","BookAuthors","bookAuthors","map","author","index","key","bookTop","book_BookCover","shelf_BookshelfChanger","isRequired","func","BookTitle","bookTitle","Book","imageLinks","thumbnail","BookTop","book_BookTitle","title","book_BookAuthors","authors","object","BooksGrid","book_Book","array","SearchBooksResults","shelf_BooksGrid","SearchBooksInput","handleSearchChange","searchInputValue","type","placeholder","CloseSearch","onSearchButtonClose","react_router_dom","to","onClick","Proptypes","SearchBooksBar","search_CloseSearch","search_SearchBooksInput","SearchBooks","search_SearchBooksBar","search_SearchBooksResults","ListBooksTitle","BookshelfTitle","BookshelfBooks","Bookshelf","shelf_BookshelfTitle","shelf_BookshelfBooks","ListBooksContent","category","shelf_Bookshelf","filter","OpenSearch","buttonText","ListBooks","Home_ListBooksTitle","components_ListBooksContent","Home_OpenSearch","BooksApp","state","searchedBooks","BooksAPI","response","setState","oldState","oldBook","console","log","trim","length","_this2","_this3","react_router","exact","path","render","Home_ListBooks","components_SearchBooks","React","ReactDOM","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d4d02d3a.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookCover = props => {\r\n    const { backgroundImage } = props;\r\n    return (\r\n        <div\r\n            className=\"book-cover\"\r\n            style={{\r\n            width: 128,\r\n            height: 193,\r\n            backgroundImage: `url(${backgroundImage})`\r\n        }}></div>\r\n    );\r\n};\r\n\r\nBookCover.prototype = {\r\n    backgroundImage: PropTypes.string,\r\n};\r\n\r\nBookCover.defaultProps = {\r\n    backgroundImage: '',\r\n};\r\n\r\nexport default BookCover;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//handles the select options clicks and moves the book to the selected shelf\r\nclass BookshelfChanger extends Component {\r\n    onShelfChange = event => {\r\n        const {onShelfChange,book} = this.props;\r\n        onShelfChange(book,event.target.value);\r\n    }\r\n\r\n    render() {\r\n        const {shelf} = this.props;\r\n        return (\r\n            <div className=\"book-shelf-changer\">\r\n                <select onChange={this.onShelfChange} defaultValue={shelf}>\r\n                    <option value=\"move\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option>\r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                </select>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    static propTypes = {\r\n        onShelfChange: PropTypes.func.isRequired,\r\n        shelf: PropTypes.string.isRequired\r\n    };\r\n    static defaultProps = {\r\n        shelf: 'None',\r\n    };\r\n}\r\nexport default BookshelfChanger;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookAuthors = props => {\r\n    const {bookAuthors} = props;\r\n    return (\r\n        bookAuthors.map((author, index) => (\r\n            <div key={index} className=\"book-authors\">{author}</div>\r\n        ))\r\n\r\n    );\r\n};\r\n\r\n\r\nBookAuthors.prototype = {\r\n    bookAuthors: PropTypes.string,\r\n};\r\n\r\nBookAuthors.defaultProps = {\r\n    bookAuthors: [],\r\n};\r\n\r\nexport default BookAuthors;","import React from 'react';\r\nimport BookCover from './BookCover';\r\nimport BookShelfChanger from '../shelf/BookshelfChanger';\r\nimport PropTypes from 'prop-types';\r\nimport BookAuthors from './BookAuthors';\r\n\r\nconst bookTop = props => {\r\n    const { backgroundImage, onShelfChange, shelf ,book} = props;\r\n    return (\r\n        <div className=\"book-top\">\r\n            <BookCover backgroundImage={backgroundImage}/>\r\n            <BookShelfChanger onShelfChange={onShelfChange} shelf={shelf} book={book}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nbookTop.prototype = {\r\n    backgroundImage: PropTypes.string.isRequired,\r\n    onShelfChange: PropTypes.func.isRequired,\r\n    shelf: PropTypes.string.isRequired,\r\n};\r\n\r\nbookTop.defaultProps = {\r\n    backgroundImage: '',\r\n    \r\n};\r\n\r\nexport default bookTop;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookTitle = props => {\r\n    const {bookTitle} = props;\r\n    return (\r\n        <div className=\"book-title\">{bookTitle}</div>\r\n\r\n    );\r\n};\r\n\r\n\r\nBookTitle.prototype = {\r\n    bookTitle: PropTypes.string,\r\n};\r\n\r\nBookTitle.defaultProps = {\r\n    bookTitle: '',\r\n};\r\n\r\nexport default BookTitle;","import React from 'react';\r\nimport BookTop from './BookTop';\r\nimport BookTitle from './BookTitle';\r\nimport BookAuthors from './BookAuthors'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Book = props => {\r\n    const {book, onShelfChange} = props;\r\n    const backgroundImage = book.imageLinks && book.imageLinks.thumbnail\r\n        ? book.imageLinks.thumbnail\r\n        : '';\r\n    return (\r\n        <div  className=\"book\">\r\n            <BookTop\r\n                backgroundImage={backgroundImage}\r\n                book ={book}\r\n                onShelfChange={onShelfChange}\r\n                shelf={book.shelf}/>\r\n            <BookTitle bookTitle={book.title}/>\r\n            <BookAuthors bookAuthors={book.authors}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nBook.prototype = {\r\n    book: PropTypes.object.isRequired,\r\n    onShelfChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Book;","import React from 'react';\r\nimport Book from '../book/Book';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BooksGrid = props => {\r\n    const {books,onShelfChange} = props;\r\n\r\n    return (\r\n        <ol className=\"books-grid\">\r\n            {books.map(book => (<li key={book.id}><Book book={book} onShelfChange={onShelfChange}/></li>))}\r\n\r\n        </ol>\r\n    );\r\n\r\n}\r\n\r\nBooksGrid.PropTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    onShelfChange : PropTypes.func.isRequired\r\n};\r\n\r\nexport default BooksGrid;","import React from 'react';\r\nimport BooksGrid from '../shelf/BooksGrid';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst SearchBooksResults = props => {\r\n    const {books,onShelfChange} = props;\r\n    return (\r\n        <div className=\"search-books-results\">\r\n        <BooksGrid books ={books} onShelfChange = {onShelfChange} />\r\n    </div>\r\n    );\r\n};\r\n\r\n\r\nSearchBooksResults.prototype = {\r\n    books: PropTypes.object.isRequired,\r\n    onShelfChange: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default SearchBooksResults;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBooksInput extends Component {\r\n    handleSearchChange = event => {\r\n        const {handleSearchChange} = this.props;\r\n        handleSearchChange(event.target.value);\r\n    }\r\n    render() {\r\n        const { searchInputValue }= this.props;\r\n        return (\r\n            <div className=\"search-books-input-wrapper\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by title or author\"\r\n                    value={searchInputValue}\r\n                    onChange={this.handleSearchChange}/>\r\n\r\n            </div>\r\n        );\r\n\r\n    };\r\n\r\n    static PropTypes = {\r\n        handleSearchChange: PropTypes.func.isRequired,\r\n        searchInputValue : PropTypes.string.isRequired,\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SearchBooksInput;","import React, {Component} from 'react';\r\nimport Proptypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass CloseSearch extends Component {\r\n    onSearchButtonClose = () => {\r\n        const {onSearchButtonClose} = this.props;\r\n        onSearchButtonClose();\r\n    }\r\n    render() {\r\n        return (\r\n            <Link to='/'>\r\n                <button className=\"close-search\" onClick={this.onSearchButtonClose}>Close</button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    static Proptypes = {\r\n        onSearchButtonClose: Proptypes.func.isRequired\r\n    }\r\n};\r\n\r\nexport default CloseSearch;","import React from 'react';\r\nimport SearchBooksInput from './SearchBooksInput';\r\nimport CloseSearch from './CloseSearch';\r\nimport Proptypes from 'prop-types';\r\nconst SearchBooksBar = props => {\r\n\r\n    const {handleSearchChange ,onSearchButtonClose} = props;\r\n    return (\r\n        <div className=\"search-books-bar\">\r\n            <CloseSearch onSearchButtonClose={onSearchButtonClose}/>\r\n            <SearchBooksInput handleSearchChange={handleSearchChange}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nSearchBooksBar.prototype = {\r\n    handleSearchChange: Proptypes.func.isRequired\r\n}\r\n\r\nexport default SearchBooksBar;","import React  from 'react';\r\nimport SearchBooksResults from './search/SearchBooksResults';\r\nimport SearchBooksBar from './search/SearchBooksBar';\r\nimport Proptypes from 'prop-types';\r\nconst SearchBooks =props => {\r\n\r\n  \r\n        const { books, onShelfChange, handleSearchChange,onSearchButtonClose } = props;\r\n        return (\r\n            <div className=\"search-books\">\r\n                <SearchBooksBar handleSearchChange={handleSearchChange} onSearchButtonClose={onSearchButtonClose}/>\r\n                <SearchBooksResults books={books} onShelfChange={onShelfChange}/>\r\n            </div>\r\n        );\r\n  \r\n\r\n    \r\n}\r\n\r\nSearchBooks.prototype = {\r\n    books: Proptypes.array.isRequired,\r\n    onShelfChange: Proptypes.func.isRequired,\r\n    handleSearchChange : Proptypes.func.isRequired,\r\n}\r\n\r\nexport default SearchBooks;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListBooksTitle = props => {\r\n    const {title} = props;\r\n\r\n    return (\r\n        <div className=\"list-books-title\">\r\n            <h1>{title}</h1>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nListBooksTitle.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ListBooksTitle;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookshelfTitle = props => {\r\n    const {title} = props;\r\n    return (\r\n        <h2 className=\"bookshelf-title\">{title}</h2>\r\n\r\n    );\r\n}\r\n\r\nBookshelfTitle.PropTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BookshelfTitle;","import React from 'react';\r\nimport BooksGrid from './BooksGrid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookshelfBooks = props => {\r\n    const {books, onShelfChange} = props;\r\n\r\n    return (\r\n        <div className=\"bookshelf-books\">\r\n            <BooksGrid books={books} onShelfChange={onShelfChange}/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nBookshelfBooks.prototype = {\r\n    books: PropTypes.array.isRequired,\r\n    onShelfChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BookshelfBooks;","import React from 'react';\r\nimport BookshelfTitle from './BookshelfTitle';\r\nimport BookshelfBooks from './BookshelfBooks';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Bookshelf = props => {\r\n    const { title, books, onShelfChange } = props;\r\n    return (\r\n\r\n        <div className=\"bookshelf\">\r\n            <BookshelfTitle title={title}/>\r\n            <BookshelfBooks books={books} onShelfChange={onShelfChange}/>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nBookshelf.PropTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    books: PropTypes.array.isRequired,\r\n    onShelfChange : PropTypes.func.isRequired\r\n};\r\nexport default Bookshelf;","import React from 'react';\r\nimport Bookshelf from './shelf/Bookshelf';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListBooksContent = props => {\r\n    const {books, onShelfChange} = props;\r\n\r\n    const shelfs = [\r\n        {\r\n            title: 'Currently Reading',\r\n            category: 'currentlyReading'\r\n        }, {\r\n            title: 'Want to Read',\r\n            category: 'wantToRead'\r\n        }, {\r\n            title: 'Read',\r\n            category: 'read'\r\n        }\r\n    ];\r\n    return (\r\n\r\n        <div className=\"list-books-content\">\r\n            {shelfs.map(shelf => (\r\n                <div>\r\n                    <Bookshelf\r\n                        title={shelf.title}\r\n                        books={books.filter(book => book.shelf === shelf.category)}\r\n                        onShelfChange={onShelfChange}/>\r\n                </div>\r\n            ))}\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nBookshelf.PropTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    onShelfChange: PropTypes.func.isRequired\r\n};\r\nexport default ListBooksContent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst OpenSearch = props => {\r\n    const {buttonText} = props;\r\n\r\n    return (\r\n        <div className=\"open-search\">\r\n        <Link to='/list-books'>\r\n                <button>${buttonText}</button>\r\n        </Link>\r\n    </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nOpenSearch.prototype = {\r\n    buttonText: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default OpenSearch;","import React from 'react';\r\nimport ListBooksTitle from './ListBooksTitle';\r\nimport ListBooksContent from '../ListBooksContent';\r\nimport OpenSearch from './OpenSearch';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListBooks = props => {\r\n    const {title, onShelfChange, books} = props;\r\n\r\n    return (\r\n        <div className=\"list-books\">\r\n            <ListBooksTitle title={title}/>\r\n            <ListBooksContent books={books} onShelfChange={onShelfChange}/>\r\n            <OpenSearch buttonText={'Add a Book'}/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nListBooks.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n    onShelfChange: PropTypes.func.isRequired,\r\n    books: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ListBooks;","import React from 'react'\r\nimport * as BooksAPI from './API/BooksAPI'\r\nimport './App.css'\r\nimport {Route} from 'react-router-dom'\r\nimport SearchBooks from './components/SearchBooks';\r\nimport ListBooks from './components/Home/ListBooks'\r\nclass BooksApp extends React.Component {\r\n    state = {\r\n        books: [],\r\n        searchedBooks: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        BooksAPI\r\n            .getAll()\r\n            .then(books => {\r\n                this.setState({books});\r\n                console.log(this.state.books);\r\n\r\n            })\r\n\r\n    }\r\n\r\n    onShelfChange = (book, shelf) => {\r\n        BooksAPI\r\n            .update(book, shelf)\r\n            .then(response => {\r\n                book.shelf = shelf;\r\n                this.setState(oldState => ({\r\n                    books: oldState\r\n                        .books\r\n                        .filter(oldBook => oldBook.id !== book.id)\r\n                        .concat(book)\r\n                }));\r\n            });\r\n    }\r\n\r\n    handleSearchChange = (query) => {\r\n        console.log(`query is ${query} , result is ${this.state.searchedBooks}`);\r\n        if (query) {\r\n            BooksAPI\r\n                .search(query.trim())\r\n                .then(books => {\r\n                    books.length > 0\r\n                        ? this.setState({searchedBooks: books})\r\n                        : this.setState({searchedBooks: []})\r\n                })\r\n        } else {\r\n            this.setState({searchedBooks: []});\r\n        }\r\n    }\r\n\r\n    onSearchButtonClose = () => {\r\n        this.setState({searchedBooks: []});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => (<ListBooks\r\n                    books={this.state.books}\r\n                    title={`My Reads`}\r\n                    onShelfChange={this.onShelfChange}/>)}></Route>\r\n                <Route\r\n                    path='/list-books'\r\n                    render={() => ((<SearchBooks\r\n                    books={this.state.searchedBooks}\r\n                    onShelfChange={this.onShelfChange}\r\n                    handleSearchChange={this.handleSearchChange}\r\n                    onSearchButtonClose={this.onSearchButtonClose}/>))}></Route>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter} from 'react-router-dom'\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n    </BrowserRouter>, document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}